buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "io.ratpack.ratpack-groovy" version "1.5.4"
}

apply plugin: 'kotlin-multiplatform'
apply plugin: 'application'


kotlin {
    targets {
        fromPreset(presets.jvm, 'backend')
        fromPreset(presets.js, 'frontend') {
            [tasks.getByName(compilations.main.compileKotlinTaskName), tasks.getByName(compilations.test.compileKotlinTaskName)]*.kotlinOptions {
                languageVersion = "1.3"
                moduleKind = "umd"
                sourceMap = true
                metaInfo = true
            }
        }
    }
    sourceSets {
        backendMain
        frontendMain
    }
}


group 'cookbook'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

//sourceSets {
//    main.kotlin.srcDirs = main.java.srcDirs = ['src']
//    test.kotlin.srcDirs = test.java.srcDirs = ['test']
//    main.resources.srcDirs = ['resources']
//    test.resources.srcDirs = ['testresources']
//}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://jitpack.io'}
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

dependencies {
    backendMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    backendMainImplementation "io.ktor:ktor-server-netty:$ktor_version"
    backendMainImplementation "ch.qos.logback:logback-classic:$logback_version"
    backendMainImplementation "io.ktor:ktor-server-core:$ktor_version"
    backendMainImplementation "io.ktor:ktor-html-builder:$ktor_version"
    backendMainImplementation "org.jetbrains:kotlin-css-jvm:1.0.0-pre.31-kotlin-1.2.41"
    backendMainImplementation "io.ktor:ktor-server-host-common:$ktor_version"
    backendMainImplementation "io.ktor:ktor-locations:$ktor_version"
    backendMainImplementation "io.ktor:ktor-server-sessions:$ktor_version"
    backendMainImplementation "io.ktor:ktor-auth:$ktor_version"
    backendMainImplementation "org.apache.commons:commons-lang3:3.0"
    backendMainImplementation "com.github.jkcclemens:khttp:-SNAPSHOT"
    backendMainImplementation "org.postgresql:postgresql:42.2.2"
    backendMainImplementation 'org.jetbrains.exposed:exposed:0.11.2'
    backendMainImplementation "com.amazonaws:aws-java-sdk:1.11.163"
    backendMainImplementation "com.beust:klaxon:3.0.1"
    backendTestCompile "io.ktor:ktor-server-tests:$ktor_version"

    frontendMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-js"
}

def webFolder = new File(project.buildDir, "../src/frontendMain/web")
def frontendCompilations = kotlin.targets.frontend.compilations

task populateWebFolder(dependsOn: [frontendMainClasses]) {
    doLast {
        copy {
            from frontendCompilations.main.output
            from kotlin.sourceSets.frontendMain.resources.srcDirs
            frontendCompilations.test.runtimeDependencyFiles.each {
                if (it.exists() && !it.isDirectory()) {
                    from zipTree(it.absolutePath).matching { include '*.js' }
                }
            }
            into webFolder
        }
    }
}

frontendJar.dependsOn(populateWebFolder)

distributions {
    main {
       // baseName = 'cookbook'
        contents {
            from(backendJar)
            from("src/backendMain/resources")
            from("src/frontendMain/web")
        }
    }
}

// Heroku integration
task stage(type: Copy) {
    dependsOn installDist
}